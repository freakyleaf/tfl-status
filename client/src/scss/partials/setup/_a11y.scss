@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  * {
    animation-delay: 0ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-duration: 0ms !important;
  }
}

*:active,
*:focus,
*:hover {
  outline: none !important; // Remove outline for non-keyboard focus
}

$focusable-box-shadow-initial:
  0 0 0 0 transparent,
  0 0 0 0 transparent;
$focusable-box-shadow-focused:
  0 0 0 $a11y-box-shadow-width var(--color-a11y-focus-inner),
  0 0 0 $a11y-box-shadow-width * 2 var(--color-a11y-focus-outer);

%focus-inner {
  box-shadow: inset $focusable-box-shadow-focused !important;
}

%focus-outer {
  z-index: $z-index-a11yfocus-outer; // Ensure the box shadow is visible above other elements
  box-shadow: $focusable-box-shadow-focused !important;
}

%focusable {
  outline: none;
  transition: $transition-constant;
  transition-property: box-shadow;
}

%focusable-inner {
  box-shadow: inset $focusable-box-shadow-initial;

  .focus-visible & {
    &:focus { // `.focus-visible` is added to `body` with JS when the user is tabbing
      @extend %focus-inner;
    }
  }
}

%focusable-outer {
  box-shadow: $focusable-box-shadow-initial;

  .focus-visible & {
    &:focus { // `.focus-visible` is added to `body` with JS when the user is tabbing
      @extend %focus-outer;
    }
  }
}

// Elements that need an 'inner' focus state
[tabindex]:not([tabindex^='-']) {
  @extend %focusable;
  @extend %focusable-inner;
}

// Elements that need an 'outer' focus state
a,
button,
input,
select {
  @extend %focusable;
  @extend %focusable-outer;
}
